diff --git a/Source/WTF/wtf/dtoa/utils.h b/Source/WTF/wtf/dtoa/utils.h
index 6a875fdf..8eb9f556 100644
--- a/Source/WTF/wtf/dtoa/utils.h
+++ b/Source/WTF/wtf/dtoa/utils.h
@@ -91,7 +91,8 @@ int main(int argc, char** argv) {
     defined(__AARCH64EL__) || defined(__aarch64__) || defined(__AARCH64EB__) || \
     defined(__riscv) || \
     defined(__or1k__) || defined(__arc__) || \
-    defined(__EMSCRIPTEN__)
+    defined(__EMSCRIPTEN__) || \
+    defined(__sw_64__)
 #define DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS 1
 #elif defined(__mc68000__) || \
     defined(__pnacl__) || defined(__native_client__)
diff --git a/Source/WebKit/UIProcess/Launcher/glib/Syscalls.h b/Source/WebKit/UIProcess/Launcher/glib/Syscalls.h
index 18dea9a9..b5c47fd3 100644
--- a/Source/WebKit/UIProcess/Launcher/glib/Syscalls.h
+++ b/Source/WebKit/UIProcess/Launcher/glib/Syscalls.h
@@ -49,6 +49,11 @@
 # define FLATPAK_MISSING_SYSCALL_BASE 0x40000000
 #endif
 
+
+#if defined(__sw_64__)
+# define FLATPAK_MISSING_SYSCALL_BASE -153
+#endif
+
 // FLATPAK_MISSING_SYSCALL_BASE:
 //
 // Number to add to the syscall numbers of recently-added syscalls
@@ -148,6 +153,11 @@
 # define __SNR_process_madvise __NR_process_madvise
 #endif
 
+// MCW, 2022-05-18
+// Sunway linux kernel is weird. It's syscall number allocation is
+// much different with other architectures.
+#if !defined(__sw_64__)
+
 #ifndef __NR_epoll_pwait2
 # define __NR_epoll_pwait2 (FLATPAK_MISSING_SYSCALL_BASE + 441)
 #endif
@@ -197,4 +207,6 @@
 # define __SNR_memfd_secret __NR_memfd_secret
 #endif
 
+#endif
+
 // Last updated: Linux 5.14, syscall numbers < 448
